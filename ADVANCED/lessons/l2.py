a = 42
print(type(a), id(a))
print(isinstance(a, int))

a = 'hello world'
print(type(a), id(a))

a = 42.0 * 3.14 / 2.72
print(type(a), id(a))

a = True
print(type(a), id(a))
print(isinstance(a, int))

a = 3.14
print(isinstance(a, (int, float, complex)))

num = 2 + 2 * 2
digit = 36 / 6
print(num, ',', digit)
print(num == digit)
print(num is digit)

txt = 'Hello world!'
print(txt, id(txt))
txt = txt.replace(' ', '_')
print(txt, id(txt))

x = 42
y = 'text'
z = 3.1415
print(hash(x), hash(y), hash(z))
my_list = [x, y, z]
print(hash(my_list)) # –ø–æ–ª—É—á–∏–º –æ—à–∏–±–∫—É, —Ç.–∫. list –∏–∑–º–µ–Ω—è–µ–º—ã–π

# –ù–∞–ø–∏—à–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ª—é–±–æ–π —Ç–µ–∫—Å—Ç
# –∏ –≤—ã–≤–æ–¥–∏—Ç –æ –Ω—ë–º —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:
# ‚úî —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞,
# ‚úî –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞ –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏,
# ‚úî —Ö–µ—à –æ–±—ä–µ–∫—Ç–∞

something = input('–í–≤–µ–¥–∏—Ç–µ —á—Ç–æ-–ª–∏–±–æ: ')
print(type(something))
print(id(something))
print(hash(something))

# –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è —Ç–∏–ø–æ–≤
a: int | float = 42
b: float = float(input('–í–≤–µ–¥–∏ —á–∏—Å–ª–æ: '))
a = a / b

def my_func(data: list[int, float]) -> float:
    res = sum(data) / len(data)
    return res

print(my_func([2, 5.5, 15, 8.0, 13.74]))

print("Hello world!".__doc__)

print("Hello world!".upper())
print("Hello world!".count('l'))

txt = 'hi'
print(dir(txt))

help(str)
help()

x = int("42")
y = int(3.1415)
z = int("hello", base=30)
print(x, y, z, sep='\n')

import sys
STEP = 2 ** 16
num = 1
for _ in range(30):
    print(sys.getsizeof(num), num)
    num *= STEP

num = 7_901_123_456_789
print(num)

num = 2 ** 16 - 1
b = bin(num)
o = oct(num)
h = hex(num)
print(b, o, h)

print(0.1 + 0.2)
pi = 3.141_592_653_589_793_238_462_643_383_279_502_884_197_169_399_375
print(pi)

text = '–ü—Ä–∏–≤–µ—Ç.' '–ö–∞–∫ —Ç—ã, –¥—Ä—É–≥?' '–†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å.'
print(text)

empty_str = ''
en_str = 'Text'
ru_str = '–¢–µ–∫—Å—Ç'
unicode_str = 'üòÄüòçüòâüôÉ'
print(empty_str.__sizeof__())
print(en_str.__sizeof__())
print(ru_str.__sizeof__())
print(unicode_str.__sizeof__())

# –ù–∞–ø–∏—à–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–∫—Å—Ç. –ï—Å–ª–∏
# —Ç–µ–∫—Å—Ç –º–æ–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —Ü–µ–ª–æ–º—É —á–∏—Å–ª—É, –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –¥–≤–æ–∏—á–Ω–æ–µ, –≤–æ—Å—å–º–∏—Ä–∏—á–Ω–æ–µ –∏
# —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–∏—Ä–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ. –ê –µ—Å–ª–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫ —Ü–µ–ª–æ–º—É –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ,
# —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω –ª–∏ —Ç–µ–∫—Å—Ç –≤ ASCII –∏–ª–∏ –Ω–µ—Ç

t = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: ')
if t.isdigit():
    num = int(t)
    b = bin(num)
    o = oct(num)
    h = hex(num)
    print(b, o, h, sep='\n')
elif t.isascii():
    print('–≤—Å–µ —Å–∏–º–≤–æ–ª—ã –≤ —Å—Ç—Ä–æ–∫–µ ASCII')

import math
print(math.pi, math.e, math.inf, math.nan, math.tau, sep='\n')
print(dir(math))
print(help(math.gcd))

import decimal
pi = decimal.Decimal('3.141_592_653_589_793_238_462_643_383_279_502_884_197_169_399_375')
decimal.getcontext().prec = 120
science = 2 * pi * decimal.Decimal(23.452346) ** 2
print(science)

import fractions
f1 = fractions.Fraction(1, 3)
print(f1)
f2 = fractions.Fraction(3, 5)
print(f2)
print(f1 * f2)

a = complex(2, 3)
b = complex('2+3j')
print(a, b, a == b, sep='\n')

d = 3.1432
print(round(d, 2))
